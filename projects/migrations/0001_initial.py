# Generated by Django 5.1 on 2024-09-18 20:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import projects.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dpt_id', models.AutoField(primary_key=True, serialize=False)),
                ('dpt_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('SUPERVISOR', 'Supervisor'), ('STUDENT', 'Student'), ('REGISTER', 'Register'), ('ADMIN', 'Admin'), ('HOD', 'Hod')], default='STUDENT', max_length=25)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('f_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.CharField(max_length=255)),
                ('dpt_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.department')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('l_id', models.AutoField(primary_key=True, serialize=False)),
                ('l_name', models.CharField(max_length=255)),
                ('dpt_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.department')),
                ('f_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='projects.faculty')),
            ],
            options={
                'ordering': ['l_id'],
                'unique_together': {('f_id', 'l_name')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('st_id', models.AutoField(primary_key=True, serialize=False)),
                ('reg_no', models.CharField(editable=False, max_length=10, unique=True)),
                ('fname', models.CharField(max_length=100)),
                ('lname', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('profile_pic', models.ImageField(upload_to=projects.models.unique_image_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('dpt_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.department')),
                ('f_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.faculty')),
                ('l_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.level')),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('sup_id', models.AutoField(primary_key=True, serialize=False)),
                ('reg_num', models.CharField(editable=False, max_length=8, unique=True)),
                ('fname', models.CharField(max_length=100)),
                ('lname', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('profile_pic', models.ImageField(upload_to=projects.models.unique_image_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('specialization', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('HoD', 'Head of Department'), ('Lecturer', 'Lecturer')], max_length=20)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('dpt_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.department')),
            ],
        ),
    ]
