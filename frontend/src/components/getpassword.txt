import React, { useState } from 'react';
import { useForm } from 'react-hook-form';
import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS

const GetPasswordForm = () => {
    const { register, handleSubmit, formState: { errors }, setError } = useForm();
    const [loading, setLoading] = useState(false);

    const onSubmit = async (data) => {
        const regNo = data.regNo;

        try {
            setLoading(true);
            const response = await fetch(`http://127.0.0.1:8000/api/supervisors/search-by-regnum/?reg_num=${regNo}`);
            
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const result = await response.json();

            if (result.exists) {
                // Handle the case where the registration number exists
                console.log('Registration number found:', result);
                // You can perform further actions like showing a success message or redirecting
            } else {
                // Handle the case where the registration number does not exist
                setError('regNo', {
                    type: 'manual',
                    message: 'Registration number not found. Please check and try again.',
                });
            }
        } catch (error) {
            console.error('There was an error!', error);
            setError('regNo', {
                type: 'manual',
                message: 'Something went wrong. Please try again later.',
            });
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="d-flex align-items-center justify-content-center vh-100">
            <div className="container">
                <div className="row justify-content-center">
                    <div className="col-md-6 col-lg-4">
                        <h2 className="text-center mb-4">Claim Your Password</h2>
                        <form onSubmit={handleSubmit(onSubmit)} className="d-flex flex-column">
                            <div className="form-group mb-3">
                                <input
                                    type="text"
                                    className={`form-control ${errors.regNo ? 'is-invalid' : ''}`}
                                    name="reg_no"
                                    {...register('regNo', {
                                        required: 'Enter your Registration number to claim a password',
                                        pattern: {
                                            value: /^\d{2}RP\d{5}$/,
                                            message: 'Invalid RegNumber format'
                                        }
                                    })}
                                    placeholder="Enter Registration Number"
                                    disabled={loading}
                                />
                                {errors.regNo && <div className="invalid-feedback">{errors.regNo.message}</div>}
                            </div>
                            <button type="submit" className="btn btn-primary w-100" disabled={loading}>
                                {loading ? 'Checking...' : 'Claim a Password'}
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default GetPasswordForm;
